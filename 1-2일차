SELECT 'A'||'B', 'C'||'D'||'c'
FROM DUAL;

SELECT first_name, last_name, first_name || ' ' || last_name as full_name
FROM EMPLOYEES;

SELECT *
FROM employees
WHERE salary > 3000
ORDER BY salary;2

BETWEEN A AND B
-- A이상 B이하

-- NULL 연산자 : IS NULL, IS NOT NULL
-- col1 = NULL (x)
-- col1 IS NULL (O)
-- NULL은 공백('')이 아님
-- 오라클에서는 NULL과 empty string('')을 동일시 함

LIKE : 문자열 비교, 같은거 전부 가져와라
last_name like 'da%'  -- 맨앞 값이 da로 시작하는 것들을 다 가져와라
last_name like '%d' -- 맨뒷 값이 d로 끝나는 것들을 다 가져와라
like '%' -- 모든 문자를 의미, 전부 가져와라

col1 in(10, 20, 30) -- col1 안에 10, 20, 30을 가져와라, or과 같은 동작
col1 = 10
or col1 = 20
or col1 = 30

SELECT *
FROM employees
WHERE commission_pct = NULL;
-- = NULL이라 인식안됨

SELECT *
FROM employees
WHERE commission_pct IS NULL;
-- IS NULL이라서 인식됨

SELECT *
FROM employees
WHERE phone_number LIKE '%124%';
-- 중간에 124가 포함된 정보를 다 가져와라

SELECT *
FROM employees
WHERE JOB_ID IN ('IT_PROG', 'AD_VP', 'FI_ACCOUNT');
-- 포함되는 것들을 가져와라

SELECT *
FROM employees
WHERE JOB_ID NOT IN ('IT_PROG', 'AD_VP', 'FI_ACCOUNT');
-- 제외하고 다 가져와라


CASE expr WHEN 비교표현식1 THEN 값1
          WHEN 비교표현식2 THEN 값2
          ….
          ELSE 값n
END
--expr이 비교표현식1과 같으면 값1, 비교표현식2와 같으면 값2를 반환
--어느 비교표현식과도 같지 않으면 ELSE 다음의 값n을 반환
-- 예제
SELECT country_id,country_name
,CASE region_id WHEN 1 THEN '유럽'
                WHEN 2 THEN '아메리카'
                WHEN 3 THEN '아시아'
                WHEN 4 THEN '중동 및 아프리카'
END AS region_name
FROM countries;

--검색형
SELECT employee_id, first_name, last_name, salary, job_id
        ,CASE   WHEN salary BETWEEN 1 AND 5000 THEN '낮음'
                WHEN salary BETWEEN 5001 AND 10000 THEN '중간'
                WHEN salary BETWEEN 10000 AND 15000 THEN '높음'
                ELSE '최상위'
END salary_rank
FROM employees;

--틀린 예제
SELECT employee_id, first_name, last_name, salary, job_id
        ,CASE   WHEN salary BETWEEN 1 AND 5000 THEN '낮음'
                WHEN salary BETWEEN 5001 AND 10000 THEN '중간'
                WHEN salary BETWEEN 10000 AND 15000 THEN '높음'
                ELSE '9'
END salary_rank
FROM employees;
-- 설명 : THEN 다음의 데이터 값에 맞춰서 끝내야함, 위 문제는 ELSE에 NUMBER가 입력되어 오류

/*· ROWNUM 의사컬럼, 테이블에 있는 컬럼처럼 작동하지만 실제 컬럼은 아닌 가상의 컬럼
- 쿼리 수행 후 조회된 각 로우에 대해 ROWNUM 의사컬럼은 그 순서를 가리키는 수를 반환
- 첫 번째 선택된 로우는 1, 두 번째는 2, … 순으로 증가됨
- 주로 where 절에서 쿼리 결과로 반환되는 로우 수를 제어할 때 사용
*/

SELECT *
FROM EMPLOYEES
WHERE ROWNUM < 10;
-- 10개 미만의 데이터들만 보여줌,
-- 사용 예 : 어느 기업의 데이터 파악을 위해 ROWNUM없이 검색했다가는 수백 수천만건의 데이터들이 보여질 수도 있음.

DELETE EMP
WHERE EMP_ID BETWEEN 10 AND 5000000
AND ROWNUM < 10000
-- AND ROWNUM 없이 실행하면 데이터가 지워지고 있는지 실시간확인불가능. 렉걸려서
-- AND ROWNUM 넣어서 실시간으로 10000건씩 지워지는 걸 볼 수 있음
